# status bar
#set-option -g status-utf8 on
setw -g utf8 on
set -g status-utf8 on

#set -g status-interval 1
#set -g status-justify left # center align window list
#set -g status-left-length 20
#set -g status-right-length 140
#set -g status-left '#[fg=green]#H #[fg=black]• #[fg=green,bright]#(uname -r | cut -c 1-6)#[default]'
#set -g status-right '#[fg=green,bg=black,bright]#(tmux-mem-cpu-load 1) #[fg=white]%a %l:%M:%S %p#[default] #[fg=blue]%Y-%m-%d'
#set -g status-right '#[fg=green,bg=black,bright]⚡#(~/bin/battery) #[fg=blue]%a %Y-%m-%d %H:%M'
set-option -g status on
set-option -g status-interval 2
set-option -g status-utf8 on
set-option -g status-justify "centre"
set-option -g status-left-length 60
set-option -g status-right-length 90
#set-option -g status-left "#(~/dev/tmux-powerline/powerline.sh left)"
#set-option -g status-right "#(~/dev/tmux-powerline/powerline.sh right)"

# default statusbar colors
set -g status-fg white
set -g status-bg black
set -g status-attr bright

# use ZSH
set-option -g default-shell /bin/zsh

# default window title colors
#set-window-option -g window-status-fg white
#set-window-option -g window-status-bg default
#set-window-option -g window-status-attr dim

# active window title colors
#set-window-option -g window-status-current-fg white
#set-window-option -g window-status-current-bg default
#set-window-option -g window-status-current-attr bright

# Highlight active window
#set-window-option -g window-status-current-bg red

set-window-option -g window-status-current-format "#[fg=colour255, bg=colour27] #I: #W "

# C-b is not acceptable -- Vim uses it
set-option -g prefix C-a
bind-key C-a last-window

# Start numbering at 1
set -g base-index 1

# Allows for faster key repetition
set -s escape-time 0

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Allows us to use C-a a <command> to send commands to a TMUX session inside
# another TMUX session
bind-key a send-prefix

# Activity monitoring
# setw -g monitor-activity on
# set -g visual-activity on

# Vi copypaste mode
set-window-option -g mode-keys vi
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection
bind y run-shell "tmux show-buffer | xclip -sel clip -i" \; display-message "Copied tmux buffer to system clipboard"

# hjkl pane traversal
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

# reload config
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."

# auto window rename
set-window-option -g automatic-rename off
set-option -g allow-rename off

# rm mouse mode fail
#set -g mode-mouse on

# Toggle mouse on with ^B m
bind m \
  set -g mode-mouse on \;\
  set -g mouse-resize-pane on \;\
  set -g mouse-select-pane on \;\
  set -g mouse-select-window on \;\
  display 'Mouse: ON'

# Toggle mouse off with ^B M
bind M \
  set -g mode-mouse off \;\
  set -g mouse-resize-pane off \;\
  set -g mouse-select-pane off \;\
  set -g mouse-select-window off \;\
  display 'Mouse: OFF'

# color
set -g default-terminal "screen-256color"
#set -g default-terminal "rxvt-unicode-256color"
